# GitHub Action to build a YIO Remote Dock for the YIO remote-os.
# Creates a pre-release if pushed on master branch without a version tag.
# Creates a release if pushed on master branch with a version tag.
---
  name: "Build & Release"

  on:
    push:
    pull_request:

  env:
    HASH_FILENAME: yio-dock-software.hash

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            # History of 500 should be more than enough to calculate commit count since last release tag.
            fetch-depth: 500

        - name: Fetch all tags to determine version
          run: |
            git fetch origin +refs/tags/*:refs/tags/*
            echo "::set-env name=VERSION::$(git describe --match "v[0-9]*" --tags HEAD --always)"

        - name: Set build timestamp
          run: echo "::set-env name=TIMESTAMP::$(date +"%Y%m%d_%H%M%S")"      

        - name: Set up Python
          uses: actions/setup-python@v1
          
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install platformio
            
        - name: Install library dependencies
          run: platformio lib -g install 1
        
        - name: Run PlatformIO
          run: platformio run -e esp32dev
            
        - name: add version
          run: |
            mkdir version
            cd version
            echo ${{ env.VERSION }} > version.txt
            cp .pio/build/esp32dev/firmware.bin firmware.bin
 
        - name: Archive production artifacts
          uses: actions/upload-artifact@v2
          with:
            name: YIO-dock-software
            path: version
            
    release:
      name: Create Release
      if: github.ref == 'refs/heads/master' || contains(github.ref, 'tags/v')
      runs-on: ubuntu-latest
      needs: build

      steps:
        - run: mkdir release
        - name: Download release artifact
          uses: actions/download-artifact@v2
          with:
            name: YIO-dock-software
            path: ./version
       
        - name: Get artifact version
          run: |
            echo "::set-env name=APP_VERSION::$(cat version/version.txt)"
            echo "::set-env name=TIMESTAMP::$(date +"%Y%m%d_%H%M%S")"
            
        - name: Create GitHub release archive
          run: |
            cd version
            zip -r ../YIO-dock-software-${{ env.APP_VERSION }}.zip .
            cd ..
            for filename in *.zip; do echo "sha256  `sha256sum $filename`" >> ${{ env.HASH_FILENAME }}; done;
            
        - name: Create Pre-Release ${{ env.VERSION }}
          uses: "marvinpinto/action-automatic-releases@latest"
          if: "!contains(github.ref, 'tags/v')"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: true
            title: "Development Build ${{ env.APP_VERSION }}"
            files: |
                *.zip
                ${{ env.HASH_FILENAME }}
                
        - name: Create Release ${{ env.VERSION }}
          uses: "marvinpinto/action-automatic-releases@latest"
          if: "contains(github.ref, 'tags/v')"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            prerelease: false
            files: |
                *.zip
                ${{ env.HASH_FILENAME }}
